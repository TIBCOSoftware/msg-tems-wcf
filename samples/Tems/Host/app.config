<?xml version="1.0"?>
<configuration>
  <system.web>
    <webServices>
      <serviceDescriptionFormatExtensionTypes>
        <!--add type="com.tibco.wcf.tems.TemsWsdlJmsBindingExtension, TIBCO.EMS.WCF, Version=2.0.0.0, Culture=neutral, PublicKeyToken=4eba9e761ecf2ed1"/>-->
        <add type="com.tibco.wcf.tems.TemsWsdlJmsBindingExtension, TIBCO.EMS.WCF, Version=2.0.0.0, Culture=neutral"/>
        <!--add type="com.tibco.wcf.tems.TemsWsdlJndiContextExtension, TIBCO.EMS.WCF, Version=2.0.0.0, Culture=neutral, PublicKeyToken=4eba9e761ecf2ed1"/>-->
        <add type="com.tibco.wcf.tems.TemsWsdlJndiContextExtension, TIBCO.EMS.WCF, Version=2.0.0.0, Culture=neutral"/>
        <!--add type="com.tibco.wcf.tems.TemsWsdlConnectionFactoryExtension, TIBCO.EMS.WCF, Version=2.0.0.0, Culture=neutral, PublicKeyToken=4eba9e761ecf2ed1"/>-->
        <add type="com.tibco.wcf.tems.TemsWsdlConnectionFactoryExtension, TIBCO.EMS.WCF, Version=2.0.0.0, Culture=neutral"/>
        <!--add type="com.tibco.wcf.tems.TemsWsdlTargetAddressExtension, TIBCO.EMS.WCF, Version=2.0.0.0, Culture=neutral, PublicKeyToken=4eba9e761ecf2ed1"/>-->
        <add type="com.tibco.wcf.tems.TemsWsdlTargetAddressExtension, TIBCO.EMS.WCF, Version=2.0.0.0, Culture=neutral"/>
      </serviceDescriptionFormatExtensionTypes>
    </webServices>
  </system.web>
  <system.serviceModel>
    <extensions>
      <bindingElementExtensions>
        <!--add name="TemsTransport" type="com.tibco.wcf.tems.TemsTransportExtensionElement, TIBCO.EMS.WCF, Version=2.0.0.0, Culture=neutral, PublicKeyToken=4eba9e761ecf2ed1"/>-->
        <add name="TemsTransport" type="com.tibco.wcf.tems.TemsTransportExtensionElement, TIBCO.EMS.WCF, Version=2.0.0.0, Culture=neutral"/>
      </bindingElementExtensions>
      <behaviorExtensions>
        <!--add name="TemsWsdlExportExtension" type="com.tibco.wcf.tems.TemsWsdlExportExtension, TIBCO.EMS.WCF, Version=2.0.0.0, Culture=neutral, PublicKeyToken=4eba9e761ecf2ed1"/>-->
        <add name="TemsWsdlExportExtension" type="com.tibco.wcf.tems.TemsWsdlExportExtension, TIBCO.EMS.WCF, Version=2.0.0.0, Culture=neutral"/>
      </behaviorExtensions>
    </extensions>
    <bindings>
      <customBinding>
        <binding name="HttpBindingText">
          <textMessageEncoding/>
          <httpTransport/>
        </binding>
        <binding name="NamedPipeBindingText">
          <textMessageEncoding/>
          <namedPipeTransport/>
        </binding>
        <binding name="TcpBindingText">
          <textMessageEncoding/>
          <tcpTransport/>
        </binding>
        <binding name="TemsBinding" closeTimeout="00:01:00" openTimeout="00:01:00" receiveTimeout="00:10:00" sendTimeout="00:01:00">
          
          <!--<security authenticationMode="UserNameOverTransport" />
          <windowsStreamSecurity protectionLevel="EncryptAndSign" />-->
          
          <!--<reliableSession />-->
          
          <!--<binaryMessageEncoding />-->
          <textMessageEncoding/>
          <!--<textMessageEncoding messageVersion="Soap11WSAddressing10" />-->
          <!--<mtomMessageEncoding />-->

          <transactionFlow transactionProtocol="OleTransactions"/>
          <!--<transactionFlow transactionProtocol="WSAtomicTransactionOctober2004" />-->
          <!--<transactionFlow transactionProtocol="WSAtomicTransaction11" />-->
          
          <TemsTransport maxBufferPoolSize="524288" maxReceivedMessageSize="65536" allowAdministratedConnFactory="true" allowAdministratedEndpointDest="true" allowAdministratedCallbackDest="true" allowBindingChanges="true" allowCustomMessageProtocol="true" clientID="" connAttemptCount="-1" connAttemptDelay="-1" connAttemptTimeout="-1" loadBalanceMetric="Connections" reconnAttemptCount="-1" reconnAttemptDelay="-1" reconnAttemptTimeout="-1" serverUrl="" certificateStoreType="EMSSSL_STORE_TYPE_DEFAULT" certificateStoreLocation="LocalMachine" certificateStoreName="" certificateNameAsFullSubjectDN="" sslClientIdentity="" sslPassword="" sslAuthOnly="false" sslProxyHost="" sslProxyPort="-1" sslProxyAuthUsername="" sslProxyAuthPassword="" sslTrace="false" sslTargetHostName="" username="" password="" sessionAcknowledgeMode="AutoAcknowledge" messageDeliveryMode="Persistent" disableMessageID="false" disableMessageTimestamp="false" priority="4" timeToLive="0" messageCompression="false" messageType="Text" throwOnInvalidUTF="true" messageProtocol="WCFNative" customMessageProtocolType="com.tibco.sample.custom.SampleMessageProtocol, CustomMessageProtocol, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" wsdlExportExtensionType="com.tibco.sample.custom.SampleWsdlExportExtension, CustomMessageProtocol, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null" wsdlExtensionActive="true" wsdlTypeSchemaImport="false" clientBaseAddress="" appHandlesMessageAcknowledge="false" appManagesConnections="false" messageSelector="" replyDestCheckInterval="00:00:30"/>
        </binding>

        <binding name="TemsBinding2">

          <!--<binaryMessageEncoding />-->
          <textMessageEncoding/>
          <!--<textMessageEncoding messageVersion="Soap11WSAddressing10" />-->
          <!--<mtomMessageEncoding />-->

          <TemsTransport/>
          
        </binding>
        
      </customBinding>
    </bindings>
    <services>
      <service behaviorConfiguration="Debug" name="BookOrderService.BookServiceType">

        <endpoint name="Tems.BookServiceType" address="net.tems://localhost:7222/queue/BookOrderPTService" behaviorConfiguration="TemsWsdlExport" binding="customBinding" bindingConfiguration="TemsBinding" bindingNamespace="http://www.tibco.com/BookOrderService" contract="BookOrderService.IBookOrder"/>
        
        <endpoint name="Tems.BookServiceType.MEX" address="net.tems://localhost:7222/queue/Tems.MEX" binding="customBinding" bindingConfiguration="TemsBinding2" contract="IMetadataExchange"/>
   

      </service>

      <service behaviorConfiguration="Debug" name="com.tibco.sample.service.ServiceRequestReplyType">

        <endpoint name="Tems.RequestReply" address="net.tems://localhost:7222/queue/Tems.RequestReplyEP" binding="customBinding" bindingConfiguration="TemsBinding" bindingNamespace="com.tibco.sample.namespace" contract="ConfigurationName.Sample.RequestReply"/>

        <endpoint name="Tems.RequestReply.MEX" address="net.tems://localhost:7222/queue/Tems.MEX" binding="customBinding" bindingConfiguration="TemsBinding2" contract="IMetadataExchange"/>        
        
      </service>

      <service behaviorConfiguration="Debug" name="com.tibco.sample.service.ServiceRequestReplySessionType">
        <endpoint name="Tems.RequestReplySession" address="net.tems://localhost:7222/queue/Tems.RequestReplySessionEP" binding="customBinding" bindingConfiguration="TemsBinding" contract="com.tibco.sample.service.IServiceRequestReplySession"/>
        <endpoint name="Tems.RequestReply.MEX" address="net.tems://localhost:7222/queue/Tems.MEX" binding="customBinding" bindingConfiguration="TemsBinding2" contract="IMetadataExchange"/>
      </service>

      <service behaviorConfiguration="Debug" name="com.tibco.sample.service.ServiceRequestReplyAsyncType">
        <endpoint name="Tems.RequestReplyAsync" address="net.tems://localhost:7222/queue/Tems.RequestReplyAsyncEP" binding="customBinding" bindingConfiguration="TemsBinding" contract="com.tibco.sample.service.IServiceRequestReplyAsync"/>
      </service>

      <service behaviorConfiguration="Debug" name="com.tibco.sample.service.ServiceDatagramType">
        <endpoint name="Tems.Datagram" address="net.tems://localhost:7222/queue/Tems.DatagramEP" binding="customBinding" bindingConfiguration="TemsBinding" contract="com.tibco.sample.service.IServiceDatagram"/>
      </service>

      <service behaviorConfiguration="Debug" name="com.tibco.sample.service.ServiceDatagramSessionType">
        <endpoint name="Tems.DatagramSession" address="net.tems://localhost:7222/queue/Tems.DatagramSessionEP" binding="customBinding" bindingConfiguration="TemsBinding" contract="com.tibco.sample.service.IServiceDatagramSession"/>
      </service>

      <service behaviorConfiguration="Debug" name="com.tibco.sample.service.ServiceDuplexType">
        <endpoint name="Tems.Duplex" address="net.tems://localhost:7222/queue/Tems.DuplexEP" binding="customBinding" bindingConfiguration="TemsBinding" contract="com.tibco.sample.service.IServiceDuplex"/>
      </service>

      <service behaviorConfiguration="Debug" name="com.tibco.sample.service.ServiceDuplexSessionType">
        <endpoint name="Tems.DuplexSession" address="net.tems://localhost:7222/queue/Tems.DuplexSessionEP" binding="customBinding" bindingConfiguration="TemsBinding" contract="com.tibco.sample.service.IServiceDuplexSession"/>
      </service>

      <service behaviorConfiguration="Debug" name="com.tibco.sample.service.ServiceDuplexTransactionType">
        <endpoint name="Tems.DuplexTransaction" address="net.tems://localhost:7222/queue/Tems.DuplexTransactionEP" binding="customBinding" bindingConfiguration="TemsBinding" contract="com.tibco.sample.service.IServiceDuplexTransaction"/>
      </service>

      <service behaviorConfiguration="Debug" name="com.tibco.sample.service.ServiceRequestReplyTypeHttp">
        <endpoint name="Http.RequestReply" address="http://localhost:8000/SimpleService" behaviorConfiguration="TemsWsdlExport" binding="customBinding" bindingConfiguration="HttpBindingText" contract="ConfigurationName.Sample.RequestReply"/>
      </service>

      <!--<service behaviorConfiguration="" name="com.tibco.sample.service.ServiceDatagramType">
        <endpoint name="Http.Datagram"
            address="http://localhost:8000/SimpleService"
            binding="customBinding" bindingConfiguration="HttpBindingText"
            contract="com.tibco.sample.service.IServiceDatagram" />
      </service>-->

      <service behaviorConfiguration="" name="com.tibco.sample.service.ServiceDatagramSessionTypePipe">
        <endpoint name="Pipe.DatagramSession" address="net.pipe://localhost/test/" binding="customBinding" bindingConfiguration="NamedPipeBindingText" contract="com.tibco.sample.service.IServiceDatagramSession"/>
      </service>

      <service behaviorConfiguration="" name="com.tibco.sample.service.ServiceDatagramSessionTypeTcp">
        <endpoint name="Tcp.DatagramSession" address="net.tcp://localhost:8000/" binding="customBinding" bindingConfiguration="TcpBindingText" contract="com.tibco.sample.service.IServiceDatagramSession"/>
      </service>

    </services>
    <!--Enable Message Logging here 
       log all messages received or sent at the transport or service model levels-->
    <!--<diagnostics>
      <messageLogging logEntireMessage="true"
                      maxMessagesToLog="1000000000"
                      logMessagesAtServiceLevel="true"
                      logMalformedMessages="true"
                      logMessagesAtTransportLevel="true" />
    </diagnostics>-->

    <behaviors>
      <serviceBehaviors>
        <behavior name="Debug">

          <serviceDebug includeExceptionDetailInFaults="true"/>
          <serviceMetadata httpGetEnabled="true" httpGetUrl="http://localhost:8000/mex"/>


          <serviceThrottling maxConcurrentCalls="64" maxConcurrentSessions="10" maxConcurrentInstances="2147483647"/>

          <serviceCredentials>
            <userNameAuthentication userNamePasswordValidationMode="Custom" customUserNamePasswordValidatorType="com.tibco.sample.authentication.UserNamePasswordValidator, Authentication"/>
          </serviceCredentials>

        </behavior>

      </serviceBehaviors>

      <endpointBehaviors>
        <behavior name="TemsWsdlExport">
          <TemsWsdlExportExtension/>
        </behavior>
      </endpointBehaviors>
    </behaviors>

  </system.serviceModel>
  <system.diagnostics>
    <switches>
      <!--
      name="TemsTraceSwitch"
      Attributes:
        - value
            Sets the level of Trace output by the TemsTransport.
            The value corresponds to one of the values of the TraceLevel enum:
                0 or Off      - Output no tracing and debugging messages. 
                1 or Error    - Output error-handling messages. 
                2 or Warning  - Output warnings and error-handling messages. 
                3 or Info     - Output informational messages, warnings, and error-handling messages. 
                4 or Verbose  - Output all debugging and tracing messages.
        - showThreadId
            Specifies if the current threadId should be included as a prefix to the Trace msg.
        - showDateTime
            Specifies if DateTime should be included as a prefix to the Trace msg.
        - dateTimeUtc
            Specifies if DateTime should be converted to Coordinated Universal Time (UTC).
        - dateTimeFormat
            Specifies the format that is used to display a DateTime prefix:
              DateTime.Now.ToString(DateTimeFormat, DateTimeFormatProvider)
            The default uses the Standard format string "o" which has the format:
              yyyy'-'MM'-'dd'T'HH':'mm':'ss'.'fffffffzz
      -->
      <add name="TemsTraceSwitch" value="Info" showThreadId="true" showDateTime="true" dateTimeUtc="true" dateTimeFormat="o"/>
      <!-- The "TemsTraceLevel" switch has been replaced with the "TemsTraceSwitch" switch. -->
      <!--<add name="TemsTraceLevel" value="Off" />-->
    </switches>
    <trace autoflush="true" indentsize="2">
      <listeners>
        <add name="console" type="System.Diagnostics.ConsoleTraceListener"/>
        <!-- Uncomment line below to write TemsTrace out to the "sharedXml" log file
        which can be viewed using the Service Trace Viewer Tool (SvcTraceViewer.exe). -->
        <!--<add name="sharedXml" />-->
      </listeners>
    </trace>

    <sharedListeners>
      <add name="sharedXml" initializeData="D:\TIBCO\EMS\Tems\logs\net.tems.service.svclog" type="System.Diagnostics.XmlWriterTraceListener"/>
    </sharedListeners>

    <!--<sources>
      <source name="System.ServiceModel"
              switchValue="Information,ActivityTracing"
              propagateActivity="true">
        <listeners>
          <add name="sharedXml" />
        </listeners>
      </source>
      <source name="System.ServiceModel.MessageLogging">
        <listeners>
          <add name="sharedXml" />
        </listeners>
      </source>
    </sources>-->

  </system.diagnostics>
<startup><supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.6.1"/></startup></configuration>
